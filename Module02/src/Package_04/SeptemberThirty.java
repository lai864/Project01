package Package_04;
/*泛型的概述
* 泛型是JDK5引入的特性，它提供了编译时类型安全检测机制。该机制允许在编译时检测到非法的类型
* 它本质是参数化类型，也就是说所操作的数据类型被指定为一个参数
* 一提到参数。最熟悉的就是定义方法时有形参。然后调用此方法时传递参数，那么参数化类型怎么理解呢？
* 顾名思义，就是将类型由原来的具体的类型参数化，然后再使用/调用时传入具体的类型
* 这种参数类型可以用在类，方法和接口中，分别被称为泛型类，泛型方法，泛型接口
*
* 这种定义格式：
*   <类型>：指定一种类型的格式，这里的类型可以看成形参
*   <类型1，类型2....>:指定多种类型格式，多种类型之间用逗号隔开，这里的类型可以看成形参
*   将来具体调用的时候可以看成实参，并且实参的类型只能是引用类型
*
* 泛型的好处：
*   把运行时期的问题提前到了编译期间
*   避免了强制类型转换*/

/*泛型类
* 泛型类的定义格式
*   格式：修饰符 class 类名<类型>{}
*   范例：public class Generic<T>{}
* T为任意标识，常用于表示泛型*/

/*泛型方法
* 泛型方法的定义格式：
*   格式：修饰符<类型>返回值类型方法名(类型变量名){}
*   范例：public<T> void show(T t){}*/
public class SeptemberThirty {

}
